@import url('https://fonts.googleapis.com/css2?family=Kdam+Thmor+Pro&family=Poppins&display=swap');

* {
    margin: 0;
    padding: 0;
    outline: none;
    color: #4a4a4a;
    text-decoration: none;
    box-sizing: border-box;
    color: var(--text-color);
    /* font-family: 'Kdam Thmor Pro', sans-serif; */
    font-family: 'Poppins', sans-serif;
}

body {
    min-height: 100vh;
    background: linear-gradient(45deg, orange 50%, #4169e1 50%);
    padding-top: 2rem;
}

.container {
    background-color: #fefefe;
    min-height: 500px;
    width: 500px;
    margin: auto;
    border-radius: .2rem;
    position: relative;
}

header {
    height: 50px;
    display: flex;
    align-items: center;
    padding: 1rem;
}

header small {
    opacity: .4;
}

hr {
    border: 1px solid #eee
}

main {
    width: 90%;
    margin: auto;
    padding-bottom: 2rem;
}

.add-task-bg {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background-color: rgba(0, 0, 0, .5);
    display: none;
    justify-content: center;
    align-items: center;
}

.add-task-bg.active {
    display: flex;
}

.add-task-container {
    display: flex;
    flex-direction: column;
    background-color: #fefefe;
    width: 90%;
    height: 280px;
    padding: 2rem 1rem 1rem 1rem;
    margin-top: 4rem;
    border-radius: .2rem;
    position: relative;
    opacity: 0;
    transform: translateY(20px);
    animation: pop .2s linear forwards;
}

@keyframes pop {
    100% {
        transform: translateY(-100px);
        opacity: 1;
    }
}

.close-popup-btn {
    position: absolute;
    top: .5rem;
    right: 1rem;
}

.task-value {
    padding: .7rem;
    width: 100%;
    border: 1px solid #eee;
    border-radius: .2rem 0 0 .2rem;
}

.task-value.error {
    border: 1px solid #f11440;
    background-color: transparent;
    color: #f11440;
    animation: error 0.2s linear 2;
}

@keyframes error {
    0% {
        transform: translateX(-4px);
    }

    20% {
        transform: translateX(4px);
    }

    40% {
        transform: translateX(-4px);
    }

    60% {
        transform: translateX(4px);
    }

    80% {
        transform: translateX(-4px);
    }
}

.task-value.error::placeholder {
    color: #f11440;
}

.task-value:focus {
    border-color: #aaa;
}

.input-control-container {
    display: flex;
    justify-content: space-between;
    margin-top: .5rem;
}

.input-control-container input {
    padding: .5rem;
    border: 1px solid #eee;
    background-color: transparent;
}

.add-task-btn {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 40%;
    margin: 1rem auto 0;
    border: 0;
    background-color: #4169e1;
    border-radius: .2rem;
}

.add-task-btn span {
    color: #fefefe;
}

.error-msg {
    background-color: #f5eaec;
    padding-left: .7rem;
    color: #f11440;
    font-weight: 500;
    font-size: 13px;
    border-radius: 0 0 .2rem .2rem;
    visibility: hidden;
}

.btn {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: .5rem;
    border: 0;
    transition: .2s;
}

.btn:active {
    transform: scale(.9);
}

.task-items {
    margin-top: 1rem;
}

.task-item {
    background-color: #f5f5f5;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
    padding: .5rem;
    border-radius: .2rem;
    margin-bottom: .5rem;
}

.left,
.right {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.chk {
    opacity: .5;
}

.chk.checked {
    color: #07794d;
}

.complete-btn {
    background-color: #03d383;
    border-radius: .2rem;
}

.complete-btn.disable {
    background-color: #ddd;
}

.complete-btn:active.disable {
    transform: scale(1);
}

.complete-btn span {
    color: #fefefe;
}

.delete-btn {
    background-color: #f11440;
    border-radius: .2rem;
}

.delete-btn span {
    color: #fefefe;
}

.description {
    text-transform: capitalize;
}

.wrapper-container {
    height: calc(300px - 50px);
    display: none;
    justify-content: center;
    align-items: center;
}

.wrapper {
    text-align: center;
}

.wrapper p{
    opacity: .5;
}

.wrapper img {
    height: 200px;
}

.wrapper-container.hide {
    display: flex;
}

.item-container {
    display: flex;
    flex-direction: column;
    width: 100%;
}

.timestamp {
    font-size: 14px;
    opacity: .7;
}

.popup-btn {
    height: 50px;
    width: 50px;
    border-radius: 50%;
    position: absolute;
    bottom: 4rem;
    right: 2rem;
    background-color: #4169e1;
    box-shadow: 10px 10px 30px rgba(0, 0, 0, .05);
}

.popup-btn span {
    color: #fefefe;
}

/* overdue */
.task-item.overdue {
    background-color: #f5f5f5;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
    padding: .5rem;
    border-radius: .2rem;
    margin-bottom: .5rem;
    color: red;
    /* Set the text color for overdue tasks */
}

.task-item.overdue .chk {
    opacity: .5;
    color: red;
    /* Set the text color for the circle icon for overdue tasks */
}

.task-item.overdue .complete-btn {
    background-color: #03d383;
    /* You can adjust the color for the complete button for overdue tasks */
}

.task-item.overdue .complete-btn span {
    color: #fefefe;
}

.task-item.overdue .delete-btn {
    background-color: #f11440;
    /* You can adjust the color for the delete button for overdue tasks */
}

.task-item.overdue .delete-btn span {
    color: #fefefe;
}

.task-item.overdue-text .description {
    text-transform: capitalize;
    color: red;
    /* Set the text color for the task value for overdue tasks */
}

.task-item.overdue .timestamp {
    font-size: 14px;
    opacity: .7;
    color: red;
    /* Set the text color for the timestamp for overdue tasks */
}

/* end of overdue */


.item-container span{
    text-transform: capitalize;
}




@media screen and (max-width:540px) {
    body {
        padding-top: unset;
    }

    .container {
        width: 100%;
        min-height: 100vh;
    }

    main {
        margin-bottom: 0;
    }
    .popup-btn{
        position: fixed;
    }
}
